/*vector<int> binarysearch(vector<int> &g,int m,int n)
{
    int low=0;
    int high=m-1;
    while(low<=high)
    {
        int mid=low+(high-low)/2;
        if()
        
    }
}*/
#include <climits>
vector<int> findPeakGrid(vector<vector<int>> &g){
   int n=g.size();
   int m=g[0].size();
   int max=INT_MIN;
   int ans=-1;
   int ans1=-1;
   for(int i=0;i<n;i++)
   {
    //vector<int> a=binarysearch(g[i],m,n);
    int low=0;
    int high=m-1;
    while(low<=high)
    {
        int mid=low+(high-low)/2;
        if(g[i][mid]>=max)
        {
            max=g[i][mid];
            ans=mid;
            ans1=i;
             low=mid+1;
            
            
        }
        else{
            high=mid-1;
        }
        
    }
   }
   return {ans1,ans};
}
