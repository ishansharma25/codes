/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) 
{
      if (head == NULL || k == 0) return head;
      
      Node *first=head;
      Node *first1;
       int n=0;
      while(first->next!=NULL)
      {
           n++;
           
           first=first->next;
      }
       
     
      first->next=head;
      n=n+1;
      //first=head;
      k=k%n;
      k=n-k;
     n=1;
     while(n<k)
     {
          head=head->next;
          n++;
     }
     //cout<<head->data;
     first=head->next;
     //head=first->next;
     head->next=NULL;
     
     
       
    
     
      cout<<"\n";
      return first;
}











